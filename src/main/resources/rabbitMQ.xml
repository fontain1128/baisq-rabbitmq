<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/rabbit
         http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">

   <!-- 连接服务配置  -->
   <rabbit:connection-factory id="connectionFactory" host="localhost" username="baisq"
        password="baisq" port="5672"/>
        
    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin id="connectAdmin" connection-factory="connectionFactory"></rabbit:admin> 
   
   <!-- queue 队列声明-->
   <rabbit:queue id="queue_one" durable="true" auto-delete="false" exclusive="false" name="queue_one"/>
   
   <!-- exchange queue binging key 绑定 -->
   <rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="queue_one" key="queue_one_key"/>
        </rabbit:bindings>
   </rabbit:direct-exchange>
   
   <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于fastjson的速度快于jackson,这里替换为fastjson的一个实现 -->
   <!-- <bean id="jsonMessageConverter"  class="mq.convert.FastJsonMessageConverter"></bean>
	 -->
   <!--定义rabbit template用于数据的接收和发送 -->
   <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
        exchange="my-mq-exchange" />
	
	<!-- 消息生产者 -->	
   <bean id="messageProducer" class="com.baisq.rabbitmq.producer.MessageProducer"></bean>

   <!-- 消息消费者 -->
   <bean id="messageConsumer" class="com.baisq.rabbitmq.consumer.MessageConsumer"></bean>
	
   <!-- queue listener 当有消息到达时会通知监听在对应的队列上的监听对象 -->
   <rabbit:listener-container
        connection-factory="connectionFactory">
        <rabbit:listener queues="queue_one" ref="messageConsumer" />
   </rabbit:listener-container>
    
</beans>